from dataclasses import dataclass, field


@dataclass
class NavbarTexts:
    new_file: str = "Новий файл"
    save_to_file: str = "Зберегти як.."
    open_file: str = "Вiдкрити.."
    about_app: str = "Про програму"
    close_app: str = "Закрити"


@dataclass
class DescriptionText:
    label: str = "Умова задачi:"


@dataclass
class TapeTexts:
    alphabet_label: str = "Алфавiт:"
    state_label: str = "Активний стан:"


@dataclass
class TapeButtonTexts:
    set_tape: str = "Завантажити стрiчку"
    step: str = "Крок ⏭"
    step_left: str = "⬅ Влiво"
    step_right: str = "Вправо ➡"
    run: str = "Запустити ▶"
    pause: str = "Пауза ⏸"
    stop: str = "Стоп ⏹"
    new_rule: str = "Додати нове правило"
    left_arrow: str = "<"
    right_arrow: str = ">"


@dataclass
class RulesTexts:
    label: str = "Правила:"


@dataclass
class CommentsTexts:
    label: str = "Коментарi:"


# ? modals
@dataclass
class ModalTexts:
    save_to_file_modal_title: str = "Зберегти данi.."
    open_file_modal_title: str = "Вiдкрити файл.."
    stop_modal_description: str = "Виконання програми зупинено вручну!" 
    finish_modal_description: str = "Алгорит виконано!" 




@dataclass
class ErrorTexts:
    too_many_symbols: str = "You've entered too many symbols, please shorten your input or add additional cells"
    invalid_rule: str = "You rule is uncorrect, please double check it: "


@dataclass
class AboutTexts:
    app_description: str = field(
        default="""\
Ця рограма є візуальним емулятором машини Тюрінга — абстрактного обчислювального пристрою, що використовується для моделювання алгоритмів та аналізу теоретичних основ обчислюваності. За її допомогою можна побітово виконати будь-які операції, що можна виконати в звичайних обчислювальних пристроях. Вона надає зручний інтерфейс для створення, налагодження та виконання програм, написаних у формі набору правил переходів для машини Тьюрінга.

Вгорі розташоване меню, що містить знопки "Зберегти як..", "Відкрити..", "Закрити", "Про програму".

Нижче розташоване поле "Умови задачі". В це поле можна записати будь-який текст. Поле призначене для запису умови задачі, до якої складений алфавіт.

Нижче розташований алфавіт. В нього задаються символи, що можна вибрати у комірки, правіше від стрічки задання алфавіту знаходиться кнопка "Завантажити стрічку", що дає можливість завантажити символи з стрічки для вводу алфавіту прямо в комірки у тому ж порядку.

Потім у центрі інтерфейсу розташована стрічка станів — основний носій даних, яка складається з комірок, кожна з яких може містити символ з обраного алфавіту або бути порожньою (символ підкреслення використовується як умовне позначення порожньої комірки). Виділена клітинка позначає поточне положення головки зчитування/запису машини, в цій програмі вона виділена жовтим кольором.

Основним елементом логіки машини є правила переходів, які задаються у вигляді п’ятиелементного запису:
qX,S > qY,T,D, де:

qX — поточний стан машини;

S — символ, що зараз зчитано зі стрічки;

qY — новий стан машини після виконання дії;

T — символ, який потрібно записати замість зчитаного;

D — напрямок переміщення головки: "L" (вліво), "R" (вправо), або "S" (залишитися на місці).

Перехід у стан q0 при цьому працює як команда для завершення програми та в кінці не пишеться куди рухати клітинку.

Ці правила задаються по черзі, і машина послідовно виконує ті, які відповідають поточному стану та символу під головкою. Якщо відповідного правила не знайдено, машина зупиняється.

Програма дозволяє запускати виконання програми повністю або покроково, використовуючи кнопки "Запустити", "Крок", "Вліво" та "Вправо". Кнопка "Зупинити" перериває виконання, а також існує можливість зберігати та відкривати конфігурації через відповідні меню.

Стан "q0" традиційно використовується як стоповий — при досягненні цього стану машина припиняє свою роботу. Особливістю в деяких реалізаціях є використання символу "S" як інструкції "не рухати головку", що дозволяє виконувати логічні дії без зміщення по стрічці.

Праворуч від панелі з заданням правил знаходиться програма поле "Коментарі". В нього можна записати будь-який текст. Поле призначене для запису коментарів для програми.

Таким чином, програма забезпечує повноцінну емуляцію машини Тюрінга із можливістю редагування, запуску та відлагодження алгоритмів у зручній графічній формі. Вона корисна як для навчальних цілей, так і для дослідження обчислювальних процесів на фундаментальному рівні.

Розробка програми: 2025 рік.
"""
    )


@dataclass
class TextsConfig:
    navbar: NavbarTexts = field(default_factory=NavbarTexts)
    task_description: DescriptionText = field(default_factory=DescriptionText)
    tape: TapeTexts = field(default_factory=TapeTexts)
    tape_buttons: TapeButtonTexts = field(default_factory=TapeButtonTexts)
    rules: RulesTexts = field(default_factory=RulesTexts)
    comments: CommentsTexts = field(default_factory=CommentsTexts)
    modals: ModalTexts = field(default_factory=ModalTexts)
    errors: ErrorTexts = field(default_factory=ErrorTexts)
    about: AboutTexts = field(default_factory=AboutTexts)


TEXTS = TextsConfig()
